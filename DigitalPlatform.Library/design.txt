
获取模拟检索点

===

根据配置文件中的project，可以面板选择一个，用来进行查重。选择project
又需要一个专用对话框。

在C#脚本中，可以指定一个project名，用来查重。如果这个project名在server
端获取来的dup文件中不存在，要警告。

---
超过阈值的行背景要变色。

开窗口要记住大小位置。

---
光标在路径上，tips出现完整路径。光标在权值和上，出现检索过程tips。

---
设置窗口标题

---
最后排序阶段和取得browse阶段，要可以中断，状态条也要显示适当信息。

---
查重结束后，有一个messagebox汇报是否重的信息。也可以通过某些属性控制其省略。

---
应可以XML观察发起记录。 因为和发起的详细窗脱钩后，有时需要观察这个信息。

---
一上来就自动检索。

---
每次检索前清空listview和hashtable


~~~~

查重检索正在进行时,检索按钮应当发灰.

更换方案名, 自动重新检索一次? 或者清除listview? 空listview如何与没有重区别?

~~~~~
可以在listview前面覆盖一个半透明的控件


~~~~~~~~~~~~~~~
int MakeHtmlPage(XmlDocument dom,
			out string strHtml,
			out string strError)
		{
			strError = "";


			strHtml = "";
			strHtml += "<html>";
			strHtml += "<head>";
			// strHtml += "<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">";
			if (CssUrl != "")
			{
				strHtml += "<LINK href='"+this.CssUrl+"' type='text/css' rel='stylesheet'>";
			}

			strHtml += "</head>";

			strHtml += "<body>";

			strHtml += "<form method='post' action='action://copymulti' >";

			XmlNamespaceManager mngr = new XmlNamespaceManager(dom.NameTable);
			mngr.AddNamespace("dprms", "http://dp2003.com/dprms");
			mngr.AddNamespace("dpdc", "http://dp2003.com/dpdc");
			mngr.AddNamespace("dc", "http://purl.org/dc/elements/1.1/");
			mngr.AddNamespace("xsi", "http://www.w3.org/2001/XMLSchema-instance");

			// 上级类号
			string strParent = DomUtil.GetAttr(dom.DocumentElement, "parentID");

			strHtml += "<p class='parentlink'>";
			if (strParent != "")
			{
				string strUrl = "action://navi/" + strParent;
				strHtml += "上级类: <a class='parentlink' href='"+strUrl+"' >" + strParent + "</a>";
			}
			strHtml += "</p>";

			strHtml += "<table width='100%' cellspacing='1' cellpadding='8' border='0'>";

			XmlNode node = null;

			// 类号
			node = dom.DocumentElement.SelectSingleNode("dc:subject[@xsi:type='dpdc:CLC']", mngr);
			strHtml += "<tr class='classnumber'>";
			strHtml += "<td class='classnumbertitle' valign='bottom' nowrap align='right' width='20%'>类号</td>";

			strHtml += "<td class='classnumbertext' width='80%'>";

			if (node != null)
				strHtml += DomUtil.GetNodeText(node);

			strHtml += "</td>";
			strHtml += "</tr>";

			// 类名
			node = dom.DocumentElement.SelectSingleNode("dc:title", mngr);
			strHtml += "<tr class='classname'>";
			strHtml += "<td class='classnametitle'  nowrap align='right' width='20%'>类名</td>";

			strHtml += "<td class='classnametext' width='80%'>";

			if (node != null)
				strHtml += DomUtil.GetNodeText(node);

			strHtml += "</td>";
			strHtml += "</tr>";


			// --
			strHtml += "<tr class='seperator'>";
			strHtml += "<td class='seperator' colspan='2'></td>";
			strHtml += "</tr>";

			int i = 0;

			// 主题词若干
			XmlNodeList nodes = dom.DocumentElement.SelectNodes("dc:subject[@xsi:type='dpdc:CT']", mngr);
			strHtml += "<tr class='subject'>";
			strHtml += "<td class='subjecttitle'  nowrap align='right'>主题词</td>";

			strHtml += "<td class='subjecttext'>";
			for(i=0;i<nodes.Count;i++)
			{
				node = nodes[i];

				string strText = DomUtil.GetNodeText(node);
				string strSelectUrl = "action://copyone/" + HttpUtility.UrlEncode(strText);
			
				strHtml += "<div class='relatesubjectline'><input class='checkbox' name='subject' type='checkbox' value='"+ DomUtil.GetNodeText(node) +"'/>" + strText + " <a href='"+strSelectUrl+"' alt='选用主题词"+strText+"'>*</a></div>";
			
				// strHtml += "<div class='subjectline'><input class='checkbox' name='subject' type='checkbox' value='"+ DomUtil.GetNodeText(node) +"'/>" + DomUtil.GetNodeText(node) + "</div>";

			}
			strHtml += "</td>";
			strHtml += "</tr>";

			// 相关主题词若干
			nodes = dom.DocumentElement.SelectNodes("dc:subject[@xsi:type='dpdc:subject']/dc:subject[@xsi:type='dpdc:CT']", mngr);
			strHtml += "<tr class='relatesubject'>";
			strHtml += "<td class='relatesubjecttitle'  nowrap align='right'>相关主题词</td>";

			strHtml += "<td class='relatesubjecttext'>";
			for(i=0;i<nodes.Count;i++)
			{
				node = nodes[i];

				string strText = DomUtil.GetNodeText(node);
				string strSelectUrl = "action://copyone/" + HttpUtility.UrlEncode(strText);
			
				strHtml += "<div class='relatesubjectline'><input class='checkbox' name='subject' type='checkbox' value='"+ DomUtil.GetNodeText(node) +"'/>" + strText + " <a href='"+strSelectUrl+"' alt='选用主题词"+strText+"'>*</a></div>";

			}
			strHtml += "</td>";
			strHtml += "</tr>";

			// 命令按钮
			strHtml += "<tr class='command'>";
			strHtml += "<td class='command' colspan='2'>";
			strHtml += "<input type='submit' value='选用打勾的主题词' />";
			strHtml += "</td></tr>";


			// --
			strHtml += "<tr class='seperator'>";
			strHtml += "<td class='seperator' colspan='2'></td>";
			strHtml += "</tr>";


			// 下级类
			nodes = dom.DocumentElement.SelectNodes("dpdc:record", mngr);
			strHtml += "<tr class='childrenclass'>";
			strHtml += "<td class='childrenclasstitle'  nowrap align='right'>下级类</td>";

			strHtml += "<td class='childrenclasstext'>";
			for(i=0;i<nodes.Count;i++)
			{
				node = nodes[i];

				XmlNode child = node.SelectSingleNode("dc:title", mngr);

				string strTitle = DomUtil.GetNodeText(child);

				child = node.SelectSingleNode("dc:subject", mngr);

				string strName = DomUtil.GetNodeText(child);


				string strUrl = "action://navi/" + strName;
			
				strHtml += "<div class='childrenclassline'><a class='childrenclasslink' href='"+strUrl+"' >" + strName + "</a>" + " <span class='childrenclassname'>" + strTitle + "</span></div>";

			}
			strHtml += "</td>";
			strHtml += "</tr>";

			strHtml += "</table>";

			strHtml += "</form>";
			strHtml += "</body></html>";


			return 0;
		}

~~~~~~~~~~~~



	<dblink bibliodb="中文图书" itemdb="中文图书实体" />
	<dblink bibliodb="西文图书" itemdb="西文图书实体" />


~~~~~~~~~~~~